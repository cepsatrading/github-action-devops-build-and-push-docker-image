name: 'Build and Push Docker Image to Artifactory'
description: 'GitHub Composite Action to Build and Push Docker Image to Artifactory'
inputs:
  registry-user:
    description: 'Registry User'
    required: true
  registry-password:
    description: 'Registry Password'
    required: true
  repository-name:
    description: 'Artifactory Virtual Repository name to upload package'
    required: true
  registry-url:
    description: 'Artifactory Virtual Repository name to upload package'
    required: true
  image-name:
    description: 'Docker Image Name'
    required: true
  image-tag:
    description: 'Docker Image Tag'
    required: true
  image-version:
    description: 'Docker Image Version'
    required: true
  build-arg:
    description: 'Docker Build Arguments'
    required: false
    default: ''
  path-dockerfile:
    description: 'Docker Build Arguments'
    required: false
    default: ''
runs:
  using: "composite"
  steps:     
    - name: Docker build with Args
      run: | 
        if [[ ${{ inputs.build-arg }} != "" ]]; then
          echo "BUILD_ARGS=${{ inputs.build-arg }}" >> $GITHUB_ENV
        else
          echo "BUILD_ARGS=" >> $GITHUB_ENV
        fi
        echo "${{ inputs.build-arg }}"
      shell: bash
    - name: Docker build with dockerfile in other path
      run: | 
        if [ ${{ inputs.path-dockerfile }} ]; then
          echo "DOCKERPATH=-f ${{ inputs.path-dockerfile }}" >> $GITHUB_ENV
        else
          echo "DOCKERPATH=" >> $GITHUB_ENV
        fi
      shell: bash
  
    - id: build-and-push
      run: |  
      
        #LOGIN
        docker login cepsaregistry.jfrog.io/${{ inputs.repository-name }} -u ${{ inputs.registry-user }} -p ${{ inputs.registry-password }}
        #docker login https://cepsa.jfrog.io/${{ inputs.repository-name }} -u ${{ inputs.registry-user }} -p ${{ inputs.registry-password }}
      
        #BUILD
        #docker build -t ${{ inputs.image-name }} . --tag ${{ inputs.image-tag }}
        echo "docker build -t ${{ inputs.image-name }} ${{ env.BUILD_ARGS }} . ${{ env.DOCKERPATH }} 
        docker build -t ${{ inputs.image-name }} ${{ env.BUILD_ARGS }} . ${{ env.DOCKERPATH }} 

        #TAG
        #docker tag  ${{ inputs.image-name }} cepsa.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:${{ inputs.image-version }}
        docker tag  ${{ inputs.image-name }} cepsaregistry.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:${{ inputs.image-version }}
        docker tag  ${{ inputs.image-name }} cepsaregistry.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:latest
        
        docker image ls
        
        #PUSH
        #docker push cepsa.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:${{ inputs.image-version }}
        docker push cepsaregistry.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:${{ inputs.image-version }}
        docker push cepsaregistry.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}
      shell: bash
