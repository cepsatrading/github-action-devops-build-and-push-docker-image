name: 'Build and Push Docker Image to Artifactory'
description: 'GitHub Composite Action to Build and Push Docker Image to Artifactory'
inputs:
  registry-user:
    description: 'Registry User'
    required: true
  registry-password:
    description: 'Registry Password'
    required: true
  repository-name:
    description: 'Artifactory Virtual Repository name to upload package'
    required: true
  registry-url:
    description: 'Artifactory Virtual Repository name to upload package'
    required: true
  image-name:
    description: 'Docker Image Name'
    required: true
  image-tag:
    description: 'Docker Image Tag'
    required: true
  image-version:
    description: 'Docker Image Version'
    required: true
  build-args:
    description: 'Docker Build Arguments'
    required: false
  path-docker-file:
    description: 'Docker Build Arguments'
    required: false
runs:
  using: "composite"
  steps:     
    #- name: Docker build with Args
    #- run: | 
    #    if [ ${{ github.event.inputs.build-args }} ]; then
    #      BUILD_ARGS="--build-args ${{ inputs.build-args }}" >> $GITHUB_ENV
    #    else
    #      BUILD_ARGS="" >> $GITHUB_ENV
    #    fi
    #  shell: bash
    #- name: Docker build with Dockerfile in other path     
    - run: | 
        if [[ -z ${{ inputs.path-docker-file }} ]; then
          PATH="-f ${{ inputs.path-docker-file }}" >> $GITHUB_ENV
        else
          PATH="." >> $GITHUB_ENV
        fi
        echo "PATH ALMACENADO: ${{ inputs.path-docker-file }}"
        echo "PATH: $PATH"
      shell: bash
  
    - id: build-and-push
      run: |  
      
        #LOGIN
        docker login cepsaregistry.jfrog.io/${{ inputs.repository-name }} -u ${{ inputs.registry-user }} -p ${{ inputs.registry-password }}
        #docker login https://cepsa.jfrog.io/${{ inputs.repository-name }} -u ${{ inputs.registry-user }} -p ${{ inputs.registry-password }}
      
        #BUILD
        #docker build -t ${{ inputs.image-name }} . --tag ${{ inputs.image-tag }}
        echo "docker build -t ${{ inputs.image-name }} ${{ env.BUILD_ARGS }} ${{ env.PATH }} --tag ${{ inputs.image-tag }}"
        docker build -t ${{ inputs.image-name }} ${{ env.BUILD_ARGS }} ${{ env.PATH }} --tag ${{ inputs.image-tag }}

        #TAG
        #docker tag  ${{ inputs.image-name }} cepsa.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:${{ inputs.image-version }}
        docker tag  ${{ inputs.image-name }} cepsaregistry.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:${{ inputs.image-version }}
        docker tag  ${{ inputs.image-name }} cepsaregistry.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:latest
        
        docker image ls
        
        #PUSH
        #docker push cepsa.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:${{ inputs.image-version }}
        docker push cepsaregistry.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}:${{ inputs.image-version }}
        docker push cepsaregistry.jfrog.io/${{ inputs.repository-name }}/${{ inputs.image-name }}
      shell: bash
